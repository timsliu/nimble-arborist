This document describes how .tex files for each tree are
automatically generated and what guarantees about file
generation are maintainted.

Guarantees and assumptions
1. The scripts are additive; they will not remove content that the user
   has manually entered
2. The scripts assume that the automatically generated contents are not
   deleted; the state of the tex file is stored in a pickle file, and the
   script assumes the pickle file is accurate


1. Initialization
-check if a pickle file has been created
-if not, create a pickle file w/ metadata for the dir
-create a .gitignore
-call update_tex
-create archive folder
-runs the update method

2. Updating tex file

All
----
-read in the tex file 
-copy the old tex file to the archive folder

Images
------
-Get list of all images in the directory
-Compare to list of images in the tree_class object
-Add any that images that are not in the file

Encyclopedia link
----------
-check if the has_url field is False
-if so, open the .xlsx of all encyclopedia URLs
-check if there is a URL; if so update it

Name
--------
-check if the name of the directory matches what's in the title
-if it doesn't, replace the name

Locations
-compare the list of locations in the .xlsx with the location list

2. Compilation
-check if the tree_tex object is out of date
-if so, copy the current tex to the archive w/ a changed name
-run compile
-update the compile time in the object

3. Updating
-Any old .tex file is a saved to the .archive folder

A set of flags are used in the tex files for compilation.
These flags indicate whether certain fields can be
overwritten
